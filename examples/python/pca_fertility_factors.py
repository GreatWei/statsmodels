# coding: utf-8

# DO NOT EDIT
# Autogenerated from the notebook pca_fertility_factors.ipynb.
# Edit the notebook and then sync the output with this file.
#
# flake8: noqa
# DO NOT EDIT

# # statsmodels 主成分分析

# *Key ideas:* 主成分分析, 世界银行数据，生育率
#
# 在这个笔记中我们使用主成分分析（PCA），使用从世界银行获得的数据来分析192个国家中的生育率时间序列。
# 主要目标是了解不同国家之间生育率随时间的变化趋势。 这是 PCA 的非典型例证，因为数据是时间序列。已经
# 针对这个设置开发了主成分（PC）的实用方法，但是由于生育率数据非常平滑，因此在这个示例中使用标准PCA并没有真正的缺点。


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statsmodels.api as sm
from statsmodels.multivariate.pca import PCA

# 可以从[世界银行网站]（http://data.worldbank.org/indicator/SP.DYN.TFRT.IN）中获得数据，
# 但是在这里我们使用的是经过稍微整理的数据：

data = sm.datasets.fertility.load_pandas().data
data.head()

# 在这里，我们构造了一个仅包含数字生育率数据的 DataFrame，并将索引设置为国家/地区名称。我们还会删除所有缺少数据的国家。

columns = list(map(str, range(1960, 2012)))
data.set_index('Country Name', inplace=True)
dta = data[columns]
dta = dta.dropna()
dta.head()

# 有两种方法使用 PCA 分析矩形矩阵：我们可以将行视为 "objects"，将列视为 "variables"，反之亦然。
# 在这里，我们将把生育率措施当作 "variables"，将国家作为 "objects"。 因此目标是将每年的生育率值
# 降低到较小的生育率 "profiles" 或 "basis functions"，以反映不同国家随时间变化的大部分变化。


# 值得一看，PCA中消除了平均趋势。 它表明这个数据集涵盖的时间段内，生育率稳步下降。请注意，均值是
# 使用国家/地区作为分析单位来计算的，而忽略了人口规模。 对于以下进行的 PCA 分析也是如此。 更复杂
# 的分析可能会对这些国家加权，比如说 1980 年的人口。

ax = dta.mean().plot(grid=False)
ax.set_xlabel("Year", size=17)
ax.set_ylabel(
    "Fertility rate", size=17)
ax.set_xlim(0, 51)

# 接下来，运行 PCA：

pca_model = PCA(dta.T, standardize=False, demean=True)

# 基于特征值，我们看到第一个主成分（PC）占主导，第二和第三个主成分（PC）可能捕获了少量有意义的变化。


fig = pca_model.plot_scree(log_scale=False)

# 接下来，我们将绘制主成分（PC）因子。 主导因子是单调递增的。与上面显示的平均值相比，第一个因子得分为正的国家的生育率增长更快（或下降更快）。
# 在第一个因子上得分为负的国家/地区的生育率下降得比平均值快。第二个因子呈U形，并在 1985 年左右出现一个正峰值。第二个因子的正向评分较高的国家
# 将在数据范围的开始和结束时低于平均受精率，但高于数据中心的平均受精率的范围。


fig, ax = plt.subplots(figsize=(8, 4))
lines = ax.plot(pca_model.factors.iloc[:, :3], lw=4, alpha=.6)
ax.set_xticklabels(dta.columns.values[::10])
ax.set_xlim(0, 51)
ax.set_xlabel("Year", size=17)
fig.subplots_adjust(.1, .1, .85, .9)
legend = fig.legend(lines, ['PC 1', 'PC 2', 'PC 3'], loc='center right')
legend.draw_frame(False)

# 为了更好地理解发生了什么，我们将绘制一系列的类似主成分因子得分的国家/地区的生育率轨迹。下面这个函数很简便的绘制了此图。


idx = pca_model.loadings.iloc[:, 0].argsort()

# 首先，我们绘制第一个主成分（PC）因子得分最高的五个国家。这些国家的生育率增长率高于全球平均水平（正在下降）。



def make_plot(labels):
    fig, ax = plt.subplots(figsize=(9, 5))
    ax = dta.loc[labels].T.plot(legend=False, grid=False, ax=ax)
    dta.mean().plot(ax=ax, grid=False, label='Mean')
    ax.set_xlim(0, 51)
    fig.subplots_adjust(.1, .1, .75, .9)
    ax.set_xlabel("Year", size=17)
    ax.set_ylabel(
        "Fertility", size=17)
    legend = ax.legend(
        *ax.get_legend_handles_labels(),
        loc='center left',
        bbox_to_anchor=(1, .5))
    legend.draw_frame(False)


labels = dta.index[idx[-5:]]
make_plot(labels)

# 以下是第二个主成分（PC）因子得分最高的五个国家。这些国家的生育率在 1980 年左右达到顶峰，比世界其他大多数国家晚，随后生育率迅速下降。

idx = pca_model.loadings.iloc[:, 1].argsort()
make_plot(dta.index[idx[-5:]])

# 最后，我们获得了在第二个主成分（PC）因子得分最负的国家。这些国家的生育率下降速度远快于 1960 年代和 1970 年代的全球平均水平，然后趋于平稳。

make_plot(dta.index[idx[:5]])

# 我们还可以查看前两个主成分因子得分的散点图。 我们看到国家之间的差异是比较连续的，只是第二个主成分因子得分最高的两个国家与其他得分有所不同。
# 这些国家（阿曼和也门）在 1980 年前后的生育率急剧上升显得很突出。其他任何国家都没有这样的峰值。相反，在第一个主成分（PC）因子得分高的国家
# （生育率在不断提高）是变化连续性一部分。


fig, ax = plt.subplots()
pca_model.loadings.plot.scatter(x='comp_00', y='comp_01', ax=ax)
ax.set_xlabel("PC 1", size=17)
ax.set_ylabel("PC 2", size=17)
dta.index[pca_model.loadings.iloc[:, 1] > .2].values
